---
# tasks file for znz.atig
- name: "Install packages"
  apt:
    name: "{{ item }}"
  with_items: "{{ atig_packages }}"

- name: "Add atig group"
  group:
    name: "{{ atig_group }}"
    gid: "{{ atig_group_gid }}"
- name: "Add atig user"
  user:
    name: "{{ atig_user }}"
    comment: "atig user"
    uid: "{{ atig_user_uid }}"
    group: "{{ atig_group }}"

- name: ".atig directory"
  file:
    state: directory
    path: "{{ atig_root }}/.atig"
    owner: "{{ atig_user }}"
    group: "{{ atig_group }}"
    mode: 0700

- name: ".atig/oauth file"
  copy:
    content: "{{ atig_oauth|default('') }}"
    dest: "{{ atig_root }}/.atig/oauth"
    owner: "{{ atig_user }}"
    group: "{{ atig_group }}"
    mode: 0600

- name: "git stash"
  become_user: "{{ atig_user }}"
  command: "git stash"
  args:
    chdir: "{{ atig_root }}/atig"

- name: "Clone atig repository"
  become_user: "{{ atig_user }}"
  git:
    dest: "{{ atig_root }}/atig"
    repo: https://github.com/atig/atig
    depth: 1
  notify: "Restart atig service"

- name: "git stash pop"
  become_user: "{{ atig_user }}"
  command: "git stash pop"
  args:
    chdir: "{{ atig_root }}/atig"
  ignore_errors: yes

- name: "bundle install"
  become_user: "{{ atig_user }}"
  command: "bundle install --path {{ atig_root }}/vendor/bundle"
  args:
    chdir: "{{ atig_root }}/atig"
    creates: "{{ atig_root }}/vendor/bundle"
  notify: "Restart atig service"

- name: "bundle update"
  become_user: "{{ atig_user }}"
  command: "bundle update"
  args:
    chdir: "{{ atig_root }}/atig"
  register: result
  changed_when: '"(was " in result.stdout'

- name: "Add workaround for atig/command/status.rb:8:in `<class:Status>': uninitialized constant Twitter::Validation (NameError)"
  lineinfile:
    path: "{{ atig_root }}/atig/lib/atig/command/status.rb"
    regexp: '^(.*)::Twitter::Validation(.*)$'
    line: '\1::Twitter::TwitterText::Validation\2'
    backrefs: yes

- name: "nadoka rc for atig"
  template:
    src: "nadoka.rc.j2"
    dest: "{{ nadoka_root }}/atig-{{ item.username }}.rc"
    owner: "root"
    group: "nadoka"
    mode: 0640
    validate: 'ruby -c %s'
  with_items: "{{ atig }}"
  notify: "Restart nadoka-atig service"

- name: "atig service file for systemd"
  template:
    src: "atig.service.j2"
    dest: "/etc/systemd/system/atig@.service"
    owner: "root"
    group: "root"
    mode: 0644
  notify: "Restart atig service"

# ufw out port
- name: "Allow in to IRC server"
  ufw:
    rule: allow
    direction: in
    to_port: "{{ item.port }}"
    from_ip: "{{ item.allow_from }}"
    proto: tcp
  with_items: "{{ atig }}"
